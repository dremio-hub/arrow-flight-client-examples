# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: go-build

on:
  push:
    branches:
      - '**'
    paths:
      - 'go/**'
  pull_request:
    branches:
      - '**'
    paths:
      - 'go/**'
  schedule:
    # run every monday at 9am PST
    - cron: "0 16 * * 1"

jobs:
  test-with-dremio-go:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: go

    strategy:
      fail-fast: true
      max-parallel: 4
      matrix:
        go-version: [1.13, 1.14, 1.15]

    services:
      dremio:
        image: dremio/dremio-oss:latest
        ports:
          - 9047:9047
          - 32010:32010
        env:
          DREMIO_JAVA_EXTRA_OPTS: "-Ddebug.addDefaultUser=true -Ddremio.eula.disabled=true"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Setup python for readiness check
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install python deps
        run: pip install requests

      - name: Get Dependencies
        run:
          go get -v -t -d -tags tools .

      - name: Build
        run: go build -v .

      - name: Run Golint and Go Vet
        run: |
          go run golang.org/x/lint/golint .
          go vet .

      - name: Poll for Dremio Readiness
        run: |
          python ../readiness_check.py

      - name: Run Tests
        run: go test -v .

      - name: Print docker logs
        if: ${{ failure() || cancelled() }}
        run: docker logs $(docker ps -aq)
